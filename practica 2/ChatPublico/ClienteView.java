
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jose
 */
public class ClienteView extends javax.swing.JFrame {

    private String miNombre;
    private Server_I servidor;

    /**
     * Creates new form ClienteView
     * @param servidor
     * @param nombre
     */
    public ClienteView(Server_I servidor, String nombre) {
	initComponents();
	setTitle(nombre);
	
	addWindowListener(new WindowAdapter() {

	    @Override
	    public void windowClosing(WindowEvent we) {
		desconectar();
	    }
	});
	
	campoMensaje.addKeyListener(new KeyAdapter() {

	    @Override
	    public void keyPressed(KeyEvent ke) {
		int tecla = ke.getKeyCode();
		if(tecla == KeyEvent.VK_ENTER){
		    enviarMensaje();
		}
	    }
	    
	});
	
	this.servidor = servidor;
	this.miNombre = nombre;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollVentanaMensajes = new javax.swing.JScrollPane();
        ventanaMensajes = new javax.swing.JTextArea();
        campoMensaje = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));

        scrollVentanaMensajes.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollVentanaMensajes.setAutoscrolls(true);

        ventanaMensajes.setEditable(false);
        ventanaMensajes.setColumns(20);
        ventanaMensajes.setLineWrap(true);
        ventanaMensajes.setRows(5);
        ventanaMensajes.setWrapStyleWord(true);
        ventanaMensajes.setAutoscrolls(false);
        ventanaMensajes.setMargin(new java.awt.Insets(2, 5, 2, 5));
        scrollVentanaMensajes.setViewportView(ventanaMensajes);

        campoMensaje.setToolTipText("Escribe el mensaje a enviar...");

        botonEnviar.setText("Enviar");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollVentanaMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(campoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonEnviar)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(scrollVentanaMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
	enviarMensaje();
    }//GEN-LAST:event_botonEnviarActionPerformed
    
    public void mostrarMensaje(String mensaje){
	ventanaMensajes.append("\n" + mensaje);
	ventanaMensajes.setCaretPosition(ventanaMensajes.getDocument().getLength());
    }
    
    public void enviarMensaje(){
	if (!campoMensaje.getText().isEmpty()) {
	    try {
		servidor.difundirMensaje(miNombre, campoMensaje.getText());
	    } catch (RemoteException ex) {
		System.out.println(ex.toString());
	    }
	    campoMensaje.setText("");
	}
    }
    
    public void desconectar(){
	try {
	    servidor.desconectar(miNombre);
	} catch (RemoteException ex) {
	    System.out.println(ex.toString());
	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEnviar;
    private javax.swing.JTextField campoMensaje;
    private javax.swing.JScrollPane scrollVentanaMensajes;
    private javax.swing.JTextArea ventanaMensajes;
    // End of variables declaration//GEN-END:variables
}
